# Generated by Django 4.1.2 on 2022-11-28 09:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='Pictures')),
                ('customer', models.CharField(max_length=150)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.IntegerField()),
                ('order_status', models.IntegerField(choices=[(1, 'Order Place'), (2, 'bending'), (0, 'not_order'), (3, 'cancel order')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('n', 'none_veg'), ('v', 'veg')], default='', max_length=1)),
                ('recipes', models.CharField(max_length=150)),
                ('image', models.ImageField(null=True, upload_to='Pictures')),
                ('price', models.IntegerField()),
                ('status', models.BooleanField(default=False, help_text='0-Available, 1-Not Available')),
                ('added', models.BooleanField(choices=[(False, 'Notadded_to_Cart'), (True, 'Added_to_Cart')], default=False, help_text='0-Not Added , 1-Added')),
            ],
        ),
        migrations.CreateModel(
            name='Orderby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.CharField(max_length=30)),
                ('order_status', models.IntegerField(choices=[(1, 'success'), (2, 'pending'), (0, 'cancel')], default=2)),
                ('delivery_charge', models.FloatField(default=0.18)),
                ('ordered_things', models.ManyToManyField(to='core.cart')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PinCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('pincode', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Address',
            fields=[
                ('pincode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.pincode')),
                ('username', models.CharField(default='', max_length=120)),
                ('city', models.CharField(default='', max_length=120)),
                ('address', models.TextField()),
            ],
            bases=('core.pincode',),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transection_id', models.CharField(max_length=150)),
                ('order_status', models.IntegerField(choices=[(1, 'success'), (2, 'pending'), (0, 'cancel')], default=2)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.orderby')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=120, null=True)),
                ('Location', models.CharField(max_length=500, null=True)),
                ('address', models.TextField()),
                ('foods', models.ManyToManyField(to='core.food')),
                ('pincode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pincode')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=30)),
                ('phone', models.IntegerField()),
                ('iflogged', models.BooleanField(default=False)),
                ('token', models.CharField(default='', max_length=150, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='recipes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.food'),
        ),
        migrations.CreateModel(
            name='Deliver_Address',
            fields=[
                ('user_address_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.user_address')),
                ('phone', models.IntegerField()),
            ],
            bases=('core.user_address',),
        ),
    ]
